"use strict";

var restoreFunctions = [];

var after = function after(host, name, cb) {
  var originalFn = host[name];
  var restoreFn = undefined;

  if (originalFn) {
    host[name] = function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      originalFn.apply(this, args);
      cb.apply(this, args);
    };
    restoreFn = function () {
      return host[name] = originalFn;
    };
  } else {
    host[name] = function () {
      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      cb.apply(this, args);
    };
    restoreFn = function () {
      return delete host[name];
    };
  }

  restoreFunctions.push(restoreFn);
};

after.restorePatchedMethods = function () {
  restoreFunctions.forEach(function (restoreFn) {
    return restoreFn();
  });
  restoreFunctions = [];
};

module.exports = after;