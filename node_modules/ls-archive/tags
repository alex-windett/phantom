!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ArchiveEntry	lib/ls-archive.js	/^    function ArchiveEntry(path, type) {$/;"	r
ArchiveEntry	src/ls-archive.coffee	/^class ArchiveEntry$/;"	f
add	lib/ls-archive.js	/^    ArchiveEntry.prototype.add = function(entry) {$/;"	r
add	src/ls-archive.coffee	/^  add: (entry) ->$/;"	f
constructor	src/ls-archive.coffee	/^  constructor: (@path, @type) ->$/;"	f
convertToTree	lib/ls-archive.js	/^  convertToTree = function(entries) {$/;"	r
convertToTree	lib/ls-archive.js	/^  };$/;"	f
convertToTree	src/ls-archive.coffee	/^convertToTree = (entries) ->$/;"	f
exports	lib/ls-archive-cli.js	/^  module.exports = function() {$/;"	r
filter	lib/ls-archive.js	/^        filter: function(file) {$/;"	r
filter	src/ls-archive.coffee	/^      filter: (file) ->$/;"	f
findEntryWithName	lib/ls-archive.js	/^  findEntryWithName = function(entries, name) {$/;"	r
findEntryWithName	lib/ls-archive.js	/^  })();$/;"	f
findEntryWithName	src/ls-archive.coffee	/^findEntryWithName = (entries, name) ->$/;"	f
getName	lib/ls-archive.js	/^    ArchiveEntry.prototype.getName = function() {$/;"	r
getName	src/ls-archive.coffee	/^  getName: -> @name ?= path.basename(@path)$/;"	f
getPath	lib/ls-archive.js	/^    ArchiveEntry.prototype.getPath = function() {$/;"	r
getPath	src/ls-archive.coffee	/^  getPath: -> @path$/;"	f
isDirectory	lib/ls-archive.js	/^    ArchiveEntry.prototype.isDirectory = function() {$/;"	r
isDirectory	src/ls-archive.coffee	/^  isDirectory: -> @type is 5$/;"	f
isFile	lib/ls-archive.js	/^    ArchiveEntry.prototype.isFile = function() {$/;"	r
isFile	src/ls-archive.coffee	/^  isFile: -> @type is 0$/;"	f
isGzipPath	lib/ls-archive.js	/^  isGzipPath = function(archivePath) {$/;"	r
isGzipPath	lib/ls-archive.js	/^  };$/;"	f
isGzipPath	src/ls-archive.coffee	/^isGzipPath = (archivePath) ->$/;"	f
isParentOf	lib/ls-archive.js	/^    ArchiveEntry.prototype.isParentOf = function(entry) {$/;"	r
isParentOf	src/ls-archive.coffee	/^  isParentOf: (entry) ->$/;"	f
isPathSupported	lib/ls-archive.js	/^    isPathSupported: function(archivePath) {$/;"	r
isPathSupported	src/ls-archive.coffee	/^  isPathSupported: (archivePath) ->$/;"	f
isSymbolicLink	lib/ls-archive.js	/^    ArchiveEntry.prototype.isSymbolicLink = function() {$/;"	r
isSymbolicLink	src/ls-archive.coffee	/^  isSymbolicLink: -> @type is 2$/;"	f
isTarPath	lib/ls-archive.js	/^  isTarPath = function(archivePath) {$/;"	r
isTarPath	lib/ls-archive.js	/^  };$/;"	f
isTarPath	src/ls-archive.coffee	/^isTarPath = (archivePath) ->$/;"	f
isZipPath	lib/ls-archive.js	/^  isZipPath = function(archivePath) {$/;"	r
isZipPath	lib/ls-archive.js	/^  };$/;"	f
isZipPath	src/ls-archive.coffee	/^isZipPath = (archivePath) ->$/;"	f
list	lib/ls-archive.js	/^    list: function(archivePath, options, callback) {$/;"	r
list	src/ls-archive.coffee	/^  list: (archivePath, options={}, callback) ->$/;"	f
listGzip	lib/ls-archive.js	/^  listGzip = function(archivePath, options, callback) {$/;"	r
listGzip	lib/ls-archive.js	/^  };$/;"	f
listGzip	src/ls-archive.coffee	/^listGzip = (archivePath, options, callback) ->$/;"	f
listTar	lib/ls-archive.js	/^  listTar = function(archivePath, options, callback) {$/;"	r
listTar	lib/ls-archive.js	/^  };$/;"	f
listTar	src/ls-archive.coffee	/^listTar = (archivePath, options, callback) ->$/;"	f
listTarStream	lib/ls-archive.js	/^  listTarStream = function(inputStream, options, callback) {$/;"	r
listTarStream	lib/ls-archive.js	/^  };$/;"	f
listTarStream	src/ls-archive.coffee	/^listTarStream = (inputStream, options, callback) ->$/;"	f
listZip	lib/ls-archive.js	/^  listZip = function(archivePath, options, callback) {$/;"	r
listZip	lib/ls-archive.js	/^  };$/;"	f
listZip	src/ls-archive.coffee	/^listZip = (archivePath, options, callback) ->$/;"	f
module.exports	lib/ls-archive-cli.js	/^  archive = require('.\/ls-archive');$/;"	f
module.exports	src/ls-archive-cli.coffee	/^module.exports = ->$/;"	f
module.exports.isPathSupported	lib/ls-archive.js	/^  module.exports = {$/;"	m
module.exports.list	lib/ls-archive.js	/^    },$/;"	m
module.exports.readFile	lib/ls-archive.js	/^    },$/;"	m
module.exports.readGzip	lib/ls-archive.js	/^    },$/;"	m
readEntry	lib/ls-archive.js	/^  readEntry = function(entry, callback) {$/;"	r
readEntry	lib/ls-archive.js	/^  };$/;"	f
readEntry	src/ls-archive.coffee	/^readEntry = (entry, callback) ->$/;"	f
readFile	lib/ls-archive.js	/^    readFile: function(archivePath, filePath, callback) {$/;"	r
readFile	src/ls-archive.coffee	/^  readFile: (archivePath, filePath, callback) ->$/;"	f
readFileFromGzip	lib/ls-archive.js	/^  readFileFromGzip = function(archivePath, filePath, callback) {$/;"	r
readFileFromGzip	lib/ls-archive.js	/^  };$/;"	f
readFileFromGzip	src/ls-archive.coffee	/^readFileFromGzip = (archivePath, filePath, callback) ->$/;"	f
readFileFromTar	lib/ls-archive.js	/^  readFileFromTar = function(archivePath, filePath, callback) {$/;"	r
readFileFromTar	lib/ls-archive.js	/^  };$/;"	f
readFileFromTar	src/ls-archive.coffee	/^readFileFromTar = (archivePath, filePath, callback) ->$/;"	f
readFileFromTarStream	lib/ls-archive.js	/^  readFileFromTarStream = function(inputStream, archivePath, filePath, callback) {$/;"	r
readFileFromTarStream	lib/ls-archive.js	/^  };$/;"	f
readFileFromTarStream	src/ls-archive.coffee	/^readFileFromTarStream = (inputStream, archivePath, filePath, callback) ->$/;"	f
readFileFromZip	lib/ls-archive.js	/^  readFileFromZip = function(archivePath, filePath, callback) {$/;"	r
readFileFromZip	lib/ls-archive.js	/^  };$/;"	f
readFileFromZip	src/ls-archive.coffee	/^readFileFromZip = (archivePath, filePath, callback) ->$/;"	f
readGzip	lib/ls-archive.js	/^    readGzip: function(gzipArchivePath, callback) {$/;"	r
readGzip	src/ls-archive.coffee	/^  readGzip: (gzipArchivePath, callback) ->$/;"	f
return	lib/ls-archive-cli.js	/^      return (function(archivePath) {$/;"	r
rimraf	lib/ls-archive.js	/^              rimraf(tempDir, function() {});$/;"	r
switch	lib/ls-archive.js	/^        switch (extractedType) {$/;"	r
toString	lib/ls-archive.js	/^    ArchiveEntry.prototype.toString = function() {$/;"	r
toString	src/ls-archive.coffee	/^  toString: -> @getPath()$/;"	f
wrapCallback	lib/ls-archive.js	/^  wrapCallback = function(callback) {$/;"	r
wrapCallback	lib/ls-archive.js	/^  };$/;"	f
wrapCallback	src/ls-archive.coffee	/^wrapCallback = (callback) ->$/;"	f
